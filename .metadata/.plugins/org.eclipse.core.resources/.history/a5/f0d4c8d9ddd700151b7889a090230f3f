package lab5;

import org.jacop.constraints.Sum;
import org.jacop.constraints.SumWeight;
import org.jacop.constraints.XeqY;
import org.jacop.core.IntVar;
import org.jacop.core.Store;

public class CityPlanning {
	public static void main(String[] args) {
		long T1, T2, T;
		T1 = System.currentTimeMillis();

		T2 = System.currentTimeMillis();
		T = T2 - T1;
		System.out.println("\n\t***	Execution time = " + T + " ms");
	}

	public static void plan(Data data) {
		Store store = new Store();

		int n = data.n;
		int n_commercial = data.n_commercial;
		int n_residential = data.n_residential;
		int[] point_distribution = data.point_distribution;

		IntVar[][] city = new IntVar[n][n];
		IntVar[][] city2 = new IntVar[n][n];

		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++) {
				city[i][j] = new IntVar(store, 0, 1);
				city2[j][i] = new IntVar(store, 0, 1);
				store.impose(new XeqY(city[i][j], city2[j][i]));
			}

		IntVar[] colSum = new IntVar[n];
		IntVar[] rowSum = new IntVar[n];
		for (int i = 0; i < n; i++) {
			colSum[i] = new IntVar(store, 0, n);
			rowSum[i] = new IntVar(store, 0, n);
			store.impose(new Sum(city[i], colSum[i]));
			store.impose(new Sum(city2[i], rowSum[i]));
		}

		store.impose(new Sum(colSum, new IntVar(store, n_commercial, n_commercial)));

		IntVar colScore = new IntVar(store, 0, 100);
		IntVar rowScore = new IntVar(store, 0, 100);

		store.impose(new SumWeight(colSum, point_distribution, colScore));
		store.impose(new SumWeight(rowSum, point_distribution, rowScore));
		
		IntVar score = new IntVar(store, 0, 100);
		store.impose(new XplusYeqz(colScore, rowScore, score));
	}
}
